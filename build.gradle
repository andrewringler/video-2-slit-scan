plugins {
  id 'java'
  id "edu.sc.seis.macAppBundle" version "2.2.1"
  id "edu.sc.seis.launch4j" version "2.4.3"
  id 'application'
}

apply plugin: 'eclipse'
apply plugin: 'application'
apply plugin: 'edu.sc.seis.launch4j'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'
applicationDefaultJvmArgs = ["-Xmx2048M"]
mainClassName = "com.andrewringler.slitscan.Video2SlitScan"

group = 'com.andrewringler.slitscan'
version = '0.2.3'

repositories {
    flatDir {
        dirs 'lib', 'lib/p3', 'lib/p3-video', 'lib/controlP5'
    }
 	mavenCentral()
  	jcenter()
 	maven {
        url "http://maven.imagej.net/content/repositories/releases/"
    }
 	maven {
        url "http://repo.boundlessgeo.com/main/"
    }
}

dependencies {
    compile ":core:@jar",
            ":gluegen-rt:@jar",
            ":jogl-all@jar",
            ":gstreamer-java:@jar",
            ":jna:@jar",
            ":video:@jar",
            ":controlP5:@jar",
            'com.google.guava:guava:20.0',
            'org.slf4j:slf4j-api:1.6.1',
            'io.scif:scifio:0.32.0'
            
    runtime 'ch.qos.logback:logback-classic:1.0.9',
            'io.scif:scifio:0.32.0',
            fileTree(dir: 'lib/p3', include: '**/*.jar')
}


//
// Mac
//
// gradle createDmg
//
// the p3-video jars require us to preserve the specific folder structure
// wrap copy in task for delayed evaluation
macAppBundle {
    mainClassName = "com.andrewringler.slitscan.Video2SlitScan"
    icon = "doc/icon.icns"
    bundleJRE = true
    javaProperties.put("apple.laf.useScreenMenuBar", "false")
    backgroundImage = "doc/macbackground.png"
    backgroundImageWidth = 527
    backgroundImageHeight = 429
}
task copySlitScanNatives {
	outputs.upToDateWhen { false }
	
	doLast {
		Copy myCopy = task(myCopy, type: Copy)
		myCopy.from 'lib/p3-video'
		myCopy.into "${-> project.buildDir}/${-> macAppBundle.appOutputDir}/${-> macAppBundle.appName}.app/Contents/Java"
		myCopy.execute()
	}
}
createApp.finalizedBy copySlitScanNatives


//
// Windows
//
// gradle createExe
//
launch4j {
    mainClassName = "com.andrewringler.slitscan.Video2SlitScan"
    icon = "${projectDir}/doc/icon.ico"
    windowTitle = "Video-2-Slit-Scan"
}
task copySlitScanNativesWindows(type: Copy) {
	outputs.upToDateWhen { false }
	
	from 'lib/p3-video'
	into "${-> project.buildDir}/${-> launch4j.outputDir}/${-> launch4j.libraryDir}"
}
task zipUpWindows(type: Zip) {
	outputs.upToDateWhen { false }

	from "${-> project.buildDir}/${-> launch4j.outputDir}"
   	archiveName "${-> project.name}-${-> project.version}-windows.zip" 
}
zipUpWindows.dependsOn copySlitScanNativesWindows
createExe.finalizedBy zipUpWindows


//
// Linux
//
// gradle distTar
//
// for Application/Distributions plugin
// this is the script only version that should work on Mac/Linux/Win
// but currently this is the only version we release for Linux
// Mac and Win have their nicer custom versions with icons and packages
//
distributions {
    main {
        contents {
            from('lib/p3-video') {
                into 'lib'
            }
            from('data') {
                into 'bin/data'
            }
        }
    }
}
